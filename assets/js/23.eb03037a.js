(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{300:function(e,v,_){"use strict";_.r(v);var t=_(4),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"connection-选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#connection-选项"}},[e._v("#")]),e._v(" Connection 选项")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%60ConnectionOptions%60"}},[e._v("什么是"),_("code",[e._v("ConnectionOptions")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BF%9E%E6%8E%A5%E9%80%89%E9%A1%B9"}},[e._v("常用的连接选项")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#mysql/mariadb"}},[_("code",[e._v("mysql")]),e._v("/"),_("code",[e._v("mariadb")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#postgres/cockroachdb%E8%BF%9E%E6%8E%A5%E9%80%89%E9%A1%B9"}},[_("code",[e._v("postgres")]),e._v("/"),_("code",[e._v("cockroachdb")]),e._v("连接选项")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#sqlite"}},[_("code",[e._v("sqlite")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#better-sqlite3"}},[_("code",[e._v("better-sqlite3")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#cordova"}},[_("code",[e._v("cordova")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#react-native"}},[_("code",[e._v("react-native")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#nativescript"}},[_("code",[e._v("nativescript")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#mssql"}},[_("code",[e._v("mssql")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#mongodb"}},[_("code",[e._v("mongodb")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#sqljs"}},[_("code",[e._v("sql.js")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#expo"}},[_("code",[e._v("expo")])])]),e._v(" "),_("li",[_("a",{attrs:{href:"#%E8%BF%9E%E6%8E%A5%E9%80%89%E9%A1%B9%E7%A4%BA%E4%BE%8B"}},[e._v("连接选项示例")])])]),e._v(" "),_("h2",{attrs:{id:"什么是connectionoptions"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是connectionoptions"}},[e._v("#")]),e._v(" 什么是"),_("code",[e._v("ConnectionOptions")])]),e._v(" "),_("p",[e._v("连接选项是你传递给"),_("code",[e._v("createConnection")]),e._v("或在"),_("code",[e._v("ormconfig")]),e._v("文件中定义的连接配置。不同的数据库有自己的特定连接选项。")]),e._v(" "),_("h2",{attrs:{id:"常用的连接选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用的连接选项"}},[e._v("#")]),e._v(" 常用的连接选项")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("type")]),e._v(' - 数据库类型。你必须指定要使用的数据库引擎。该值可以是"mysql"，"postgres"，"mariadb"，"sqlite", "better-sqlite3"，"cordova"，"nativescript"，"oracle"，"mssql"，"mongodb"，"sqljs"，"react-native"。此选项是'),_("strong",[e._v("必需")]),e._v("的。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("name")]),e._v(" - 连接名。 在使用 "),_("code",[e._v("getConnection(name: string)")]),e._v("\n或 "),_("code",[e._v("ConnectionManager.get(name: string)")]),e._v('时候需要用到。不同连接的连接名称不能相同，它们都必须是唯一的。如果没有给出连接名称，那么它将被设置为"default"。')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("extra")]),e._v(" - 要传递给底层驱动程序的额外连接选项。如果要将额外设置传递给基础数据库驱动程序，请使用此配置。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("entities")]),e._v(" - 要加载并用于此连接的实体。接受要加载的实体类和目录路径。目录支持 glob 模式。示例："),_("code",[e._v('entities: [Post, Category, "entity/*.js", "modules/**/entity/*.js"]')]),e._v("。了解有关"),_("router-link",{attrs:{to:"/_posts/typeromdoc/entities.html"}},[e._v("entities")]),e._v("的更多信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("subscribers")]),e._v(" - 要加载并用于此连接的订阅者。接受要加载的实体类和目录。目录支持 glob 模式。示例："),_("code",[e._v('subscribers: [PostSubscriber, AppSubscriber, "subscriber/*.js", "modules/**/subscriber/*.js"]')]),e._v("。了解有关"),_("router-link",{attrs:{to:"/_posts/typeromdoc/listeners-and-subscribers.html"}},[e._v("subscribers")]),e._v("的更多信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("entitySchemas")]),e._v(" - 要加载并用于此连接的实体架构。接受要加载的实体模式类和目录。目录支持 glob 模式。示例："),_("code",[e._v('entitySchemas: [PostSchema, CategorySchema, "entity-schema/*.json"')]),e._v("。了解有关"),_("router-link",{attrs:{to:"/_posts/typeromdoc/schema-entity-definition.html"}},[e._v("Entity Schemas")]),e._v("的更多信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("migrations")]),e._v(" - 要加载和用于此连接的迁移。接受要加载的迁移类和目录。目录支持 glob 模式。\n示例: "),_("code",[e._v('migrations: [FirstMigration, SecondMigration, "migration/*.js", "modules/**/migration/*.js"]')]),e._v(".\n了解有关 "),_("router-link",{attrs:{to:"/_posts/typeromdoc/migrations.html"}},[e._v("Migrations")]),e._v("的更多信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("logging")]),e._v(" - 指示是否启用日志记录。如果设置为"),_("code",[e._v("true")]),e._v("，则将启用查询和错误日志记录。你还可以指定要启用的不同类型的日志记录，例如"),_("code",[e._v('["query", "error", "schema"]')]),e._v("。详细了解"),_("router-link",{attrs:{to:"/_posts/typeromdoc/logging.html"}},[e._v("Logging")]),e._v("。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("logger")]),e._v(' - 记录器，用于日志的记录方式。可能的值是"advanced-console", "simple-console" 和 "file"。默认为"advanced-console"。你还可以指定实现'),_("code",[e._v("Logger")]),e._v("接口的记录器类。详细了解"),_("router-link",{attrs:{to:"/_posts/typeromdoc/logging.html"}},[e._v("Logging")]),e._v("。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("maxQueryExecutionTime")]),e._v(" - 如果查询执行时间超过此给定的最大执行时间（以毫秒为单位），则 logger 将记录此查询。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("namingStrategy")]),e._v(" - 命名策略，用于命名数据 ​​ 库中的表和列。了解有关"),_("router-link",{attrs:{to:"/_posts/typeromdoc/naming-strategy.html"}},[e._v("Naming strategies")]),e._v("的更多信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("entityPrefix")]),e._v(" - 给此数据库连接上的所有表（或集合）加的前缀。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("dropSchema")]),e._v(" - 每次建立连接时删除架构。请注意此选项，不要在生产环境中使用它，否则将丢失所有生产数据。但是此选项在调试和开发期间非常有用。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("synchronize")]),e._v(" - 指示是否在每次应用程序启动时自动创建数据库架构。\n请注意此选项，不要在生产环境中使用它，否则将丢失所有生产数据。但是此选项在调试和开发期间非常有用。作为替代方案，你可以使用 CLI 运行 schema：sync 命令。请注意，对于 MongoDB 数据库，它不会创建模式，因为 MongoDB 是无模式的。相反，它只是通过创建索引来同步。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("migrationsRun")]),e._v(" - 指示是否在每次启动应用程序时自动运行迁移。或者，您可以使用 CLI run migrations:run command")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("migrationsTableName")]),e._v(' - 数据库中将包含有关已执行迁移的信息的表的名称。默认情况下，此表名为"migrations"。')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("cache")]),e._v(" - 启用实体结果缓存。你还可以在此处配置缓存类型和其他缓存选项。阅读更多有关"),_("router-link",{attrs:{to:"/_posts/typeromdoc/caching.html"}},[e._v("caching")]),e._v("的信息。")],1)]),e._v(" "),_("li",[_("p",[_("code",[e._v("cli.entitiesDir")]),e._v(" - CLI 默认情况下创建实体的目录。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("cli.migrationsDir")]),e._v(" - CLI 默认情况下创建迁移的目录。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("cli.subscribersDir")]),e._v(" - CLI 默认情况下创建订阅者的目录。")])])]),e._v(" "),_("h2",{attrs:{id:"mysql-mariadb"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql-mariadb"}},[e._v("#")]),e._v(" "),_("code",[e._v("mysql")]),e._v("/"),_("code",[e._v("mariadb")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("url")]),e._v(" - 连接 URL")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("host")]),e._v(" - 数据库 host")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("port")]),e._v(" - 数据库端口。mysql 默认的端口是"),_("code",[e._v("3306")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("username")]),e._v(" - 数据库用户名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("password")]),e._v(" - 数据库密码")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("charset")]),e._v(' - 连接的字符集。这在 MySQL 的 SQL 级别中称为"collation"（如 utf8_general_ci）。如果指定了 SQL 级别的字符集（如 utf8mb4），则使用该字符集的默认排序规则。 （默认值：UTF8_GENERAL_CI）。')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("timezone")]),e._v(" - MySQL 服务器上配置的时区。这用于将服务器日期/时间值强制转换为 JavaScript Date 对象，反之亦然。该值可以是"),_("code",[e._v("local")]),e._v("，"),_("code",[e._v("Z")]),e._v("或"),_("code",[e._v("+HHMM")]),e._v("或"),_("code",[e._v("-HHMM")]),e._v("形式的偏移。 （默认："),_("code",[e._v("local")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("connectTimeout")]),e._v(" - 在连接到 MySQL 服务器期间发生超时之前的毫秒数。 （默认值："),_("code",[e._v("10000")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("insecureAuth")]),e._v(" - 允许连接到要求旧（不安全）身份验证方法的 MySQL 实例。 （默认值："),_("code",[e._v("false")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("supportBigNumbers")]),e._v(" - 处理数据库中的大数字（"),_("code",[e._v("BIGINT")]),e._v("和"),_("code",[e._v("DECIMAL")]),e._v("列）时，应启用此选项（默认值："),_("code",[e._v("false")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("bigNumberStrings")]),e._v(" - 同时启用"),_("code",[e._v("supportBigNumbers")]),e._v("和"),_("code",[e._v("bigNumberStrings")]),e._v("会强制将大数字（"),_("code",[e._v("BIGINT")]),e._v("和"),_("code",[e._v("DECIMAL")]),e._v("列）作为 JavaScript String 对象返回（默认值："),_("code",[e._v("false")]),e._v("）。启用"),_("code",[e._v("supportBigNumbers")]),e._v("但禁用"),_("code",[e._v("bigNumberStrings")]),e._v("仅当它们无法用 JavaScript Number 对象准确表示时才会返回大数字作为 String 对象（当它们超过"),_("code",[e._v("[-2^53，+2^53]")]),e._v("范围时会发生），否则它们将被返回作为数字对象。如果禁用了"),_("code",[e._v("supportBigNumbers")]),e._v("，则忽略此选项。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("dateStrings")]),e._v(" - 强制日期类型（"),_("code",[e._v("TIMESTAMP")]),e._v("，"),_("code",[e._v("DATETIME")]),e._v("，"),_("code",[e._v("DATE")]),e._v("）作为字符串返回，而不是转换为 JavaScript Date 对象。可以是 true/false 或要保留为字符串的类型名称数组。 （默认值："),_("code",[e._v("false")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("debug")]),e._v(" - 将协议详细信息打印到 stdout。可以是 true/false 或应打印的数据包类型名称数组。 （默认值："),_("code",[e._v("false")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("trace")]),e._v(' - 在 Error 上生成堆栈跟踪,包括库入口的调用站点（"long stack traces"）。对大多调用来说，性能损失很轻。 （默认值：'),_("code",[e._v("true")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("multipleStatements")]),e._v(" - 每个查询允许多个 mysql 语句。请注意，它可能会增加 SQL 注入攻击的范围。 （默认值："),_("code",[e._v("false")]),e._v("）")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("legacySpatialSupport")]),e._v(" - Use spatial functions like GeomFromText and AsText which are removed in MySQL 8. (Default: true)")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("flags")]),e._v(" - 使用非默认连接标志的连接标志列表。也可以将默认值列入黑名单。有关更多信息，请查看"),_("a",{attrs:{href:"https://github.com/mysqljs/mysql#connection-flags",target:"_blank",rel:"noopener noreferrer"}},[e._v("Connection Flags"),_("OutboundLink")],1),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ssl")]),e._v(" - 带有 ssl 参数的对象或包含 ssl 配置文件名称的字符串。请参阅"),_("a",{attrs:{href:"https://github.com/mysqljs/mysql#ssl-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL 选项"),_("OutboundLink")],1),e._v("。")])])]),e._v(" "),_("h2",{attrs:{id:"postgres-cockroachdb连接选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#postgres-cockroachdb连接选项"}},[e._v("#")]),e._v(" "),_("code",[e._v("postgres")]),e._v("/"),_("code",[e._v("cockroachdb")]),e._v("连接选项")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("url")]),e._v(" - 连接 URL")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("host")]),e._v(" - 数据库主机")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("port")]),e._v(" - 数据库端口， postgres 默认端口是 "),_("code",[e._v("5432")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("username")]),e._v(" - 数据库用户名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("password")]),e._v(" - 数据库密码")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名称")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("schema")]),e._v(' - Schema 名称，默认是 "public".')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ssl")]),e._v(" - 带有 ssl 参数的对象。 详见 "),_("a",{attrs:{href:"https://node-postgres.com/features/ssl",target:"_blank",rel:"noopener noreferrer"}},[e._v("TLS/SSL"),_("OutboundLink")],1),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("uuidExtension")]),e._v(" - 生成UUID时使用的Postgres扩展。 默认为"),_("code",[e._v("uuid-ossp")]),e._v("。 如果"),_("code",[e._v("uuid-ossp")]),e._v("扩展不可用，可以更改为"),_("code",[e._v("pgcrypto")]),e._v("。")])])]),e._v(" "),_("h2",{attrs:{id:"sqlite"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sqlite"}},[e._v("#")]),e._v(" "),_("code",[e._v("sqlite")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("database")]),e._v(' - 数据库路径。 例如 "./mydb.sql"')])]),e._v(" "),_("h2",{attrs:{id:"better-sqlite3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#better-sqlite3"}},[e._v("#")]),e._v(" "),_("code",[e._v("better-sqlite3")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("database")]),e._v(' - 数据库路径。 例如 "./mydb.sql"')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("statementCacheSize")]),e._v(" - Sqlite 查询 Statement 缓存大小。默认100")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("prepareDatabase")]),e._v(" - 在数据库投入使用前运行的函数。你可以在这里访问到better-sqlite3原始数据库对象。")])])]),e._v(" "),_("h2",{attrs:{id:"cordova"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cordova"}},[e._v("#")]),e._v(" "),_("code",[e._v("cordova")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("location")]),e._v(" - 数据库存储位置。 详见 "),_("a",{attrs:{href:"https://github.com/litehelpers/Cordova-sqlite-storage#opening-a-database",target:"_blank",rel:"noopener noreferrer"}},[e._v("cordova-sqlite-storage"),_("OutboundLink")],1),e._v("。")])])]),e._v(" "),_("h2",{attrs:{id:"react-native"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#react-native"}},[e._v("#")]),e._v(" "),_("code",[e._v("react-native")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("location")]),e._v(" - 数据库存储位置。详见 "),_("a",{attrs:{href:"https://github.com/andpor/react-native-sqlite-storage#opening-a-database",target:"_blank",rel:"noopener noreferrer"}},[e._v("react-native-sqlite-storage"),_("OutboundLink")],1),e._v(" 。")])])]),e._v(" "),_("h2",{attrs:{id:"nativescript"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nativescript"}},[e._v("#")]),e._v(" "),_("code",[e._v("nativescript")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("h2",{attrs:{id:"mssql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mssql"}},[e._v("#")]),e._v(" "),_("code",[e._v("mssql")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("url")]),e._v(" - 连接 URL")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("host")]),e._v(" - 数据库主机")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("port")]),e._v(" - 端口。mssql 默认端口是 "),_("code",[e._v("1433")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("username")]),e._v(" - 用户名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("password")]),e._v(" - 密码")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("schema")]),e._v(' - Schema 名称。 默认"public".')])]),e._v(" "),_("li",[_("p",[_("code",[e._v("domain")]),e._v(" - 设置 domain 后，驱动程序将使用 domain 登录连接到 SQL Server。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("connectionTimeout")]),e._v(" - 超时时间，毫秒为单位 (默认: "),_("code",[e._v("15000")]),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("requestTimeout")]),e._v(" - 请求超时时间，毫秒为单位 (默认: "),_("code",[e._v("15000")]),e._v(")。注意: msnodesqlv8 驱动不支持\ntimeouts < 1 秒")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("stream")]),e._v(" - Stream recordsets/rows instead of returning them all at once as an argument of callback（默认值："),_("code",[e._v("false")]),e._v("）。你还可以单独为每个请求启用 streaming（"),_("code",[e._v("request.stream = true")]),e._v("）。如果你计划使用大量 rows，请始终设置为"),_("code",[e._v("true")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.max")]),e._v(" - 连接池的最大数 (默认: "),_("code",[e._v("10")]),e._v(").")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.min")]),e._v(" - 连接池的最小数 (默认: "),_("code",[e._v("0")]),e._v(").")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.maxWaitingClients")]),e._v(" - 允许的最大队列请求数，在事件循环的未来周期中，将使用错误回调其他获取调用。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.testOnBorrow")]),e._v(" - 如果连接池在将资源提供给客户端之前验证资源。需要指定"),_("code",[e._v("factory.validate")]),e._v("或"),_("code",[e._v("factory.validateAsync")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.acquireTimeoutMillis")]),e._v(" - 最大毫秒，"),_("code",[e._v("acquire")]),e._v("调用将在超时之前等待资源。（默认无限制），如果提供的话应该是非零正整数。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.fifo")]),e._v(" - 如果为true，则首先分配最旧的资源。 如果为false，则表示最近发布的资源将是第一个被分配的。这实际上将池的行为从队列转换为堆栈。布尔值，(默认为"),_("code",[e._v("true")]),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.priorityRange")]),e._v(" - 1和x之间的int值  - 如果设置了且没有可用资源，则borrowers可以在队列中指定其相对优先级(默认 "),_("code",[e._v("1")]),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.autostart")]),e._v(" - 布尔值，一旦调用构造函数，池应该开始创建资源等（默认为"),_("code",[e._v("true")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.victionRunIntervalMillis")]),e._v(" - 多久检查一次eviction checks。 默认值："),_("code",[e._v("0")]),e._v("（不运行）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.numTestsPerRun")]),e._v(" - 每次eviction checks资源数量。 默认值："),_("code",[e._v("3")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.softIdleTimeoutMillis")]),e._v(' - 在空闲对象逐出器（如果有的话）有资格驱逐之前，对象可以在池中空闲的时间量，其中额外条件是至少"最小空闲"对象实例保留在池中。默认 '),_("code",[e._v("-1")]),e._v(" (nothing can get evicted).")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pool.idleTimeoutMillis")]),e._v(" - 对象在由于空闲时间而有资格被驱逐之前可能在池中闲置的最短时间。 取代"),_("code",[e._v("softIdleTimeoutMillis")]),e._v("。 默认值："),_("code",[e._v("30000")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.fallbackToDefaultDb")]),e._v(" - 默认情况下，如果无法访问"),_("code",[e._v("options.database")]),e._v("的数据库请求，则连接将失败并显示错误。 但是，如果"),_("code",[e._v("options.fallbackToDefaultDb")]),e._v("设置为"),_("code",[e._v("true")]),e._v("，则将改为使用用户的默认数据库（默认值："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.enableAnsiNullDefault")]),e._v(" - 如果为true，则在初始sql中设置SET ANSI_NULL_DFLT_ON ON。 这意味着默认情况下新列可以为空。 有关更多详细信息，请参阅"),_("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/ms187375.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("T-SQL文档"),_("OutboundLink")],1),e._v("。 （默认值："),_("code",[e._v("true")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.cancelTimeout")]),e._v(" - 取消（中止）请求之前的毫秒数被视为失败（默认值："),_("code",[e._v("5000")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.packetSize")]),e._v(" - TDS数据包的大小（需要与服务器协商）。 应该是2的幂。（默认值："),_("code",[e._v("4096")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.useUTC")]),e._v(" - 布尔值，用于确定是以UTC还是本地时间。(默认："),_("code",[e._v("true")]),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.abortTransactionOnError")]),e._v(" - 如果在给定事务执行期间遇到任何错误，则确定是否自动回滚事务的布尔值。 这将在连接的初始SQL阶段设置"),_("code",[e._v("SET XACT_ABORT")]),e._v("的值（"),_("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/ms188792.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),_("OutboundLink")],1),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.localAddress")]),e._v(" - 字符串，指示连接到SQL Server时要使用的网络接口（IP地址）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.useColumnNames")]),e._v(" - 布尔值，用于确定是将行作为数组还是键值集合返回。 （默认："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.camelCaseColumns")]),e._v(" - 布尔值，控制返回的列名是否将第一个字母转换为小写（"),_("code",[e._v("true")]),e._v("为小写）。 如果提供"),_("code",[e._v("columnNameReplacer")]),e._v("，则忽略该值。 （默认："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.isolationLevel")]),e._v(" - 将运行事务的默认隔离级别。 隔离级别可从"),_("code",[e._v("require（'tedious').ISOLATION_LEVEL")]),e._v("获得。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("READ_UNCOMMITTED")])]),e._v(" "),_("li",[_("code",[e._v("READ_COMMITTED")])]),e._v(" "),_("li",[_("code",[e._v("REPEATABLE_READ")])]),e._v(" "),_("li",[_("code",[e._v("SERIALIZABLE")])]),e._v(" "),_("li",[_("code",[e._v("SNAPSHOT")])])]),e._v(" "),_("p",[e._v("(默认: "),_("code",[e._v("READ_COMMITTED")]),e._v(")")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.connectionIsolationLevel")]),e._v(" - 新连接的默认隔离级别。 使用此设置执行所有事务外查询。 隔离级别可从"),_("code",[e._v("require('tedious').ISOLATION_LEVEL")]),e._v("获得。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("READ_UNCOMMITTED")])]),e._v(" "),_("li",[_("code",[e._v("READ_COMMITTED")])]),e._v(" "),_("li",[_("code",[e._v("REPEATABLE_READ")])]),e._v(" "),_("li",[_("code",[e._v("SERIALIZABLE")])]),e._v(" "),_("li",[_("code",[e._v("SNAPSHOT")])])]),e._v(" "),_("p",[e._v("(默认: "),_("code",[e._v("READ_COMMITTED")]),e._v(")")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.readOnlyIntent")]),e._v(" - 布尔值，确定连接是否将从SQL Server可用性组请求只读访问权限。 有关更多信息，请参阅此处。 （默认："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.encrypt")]),e._v(" - 确定连接是否将被加密的布尔值。 如果您使用的是Windows Azure，请设置为true。 （默认："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.cryptoCredentialsDetails")]),e._v(" - 使用加密时，可以提供一个对象，该对象在调用"),_("a",{attrs:{href:"http://nodejs.org/docs/latest/api/tls.html#tls_tls_createsecurepair_credentials_isserver_requestcert_rejectunauthorized",target:"_blank",rel:"noopener noreferrer"}},[e._v("tls.createSecurePair"),_("OutboundLink")],1),e._v("时将用于第一个参数（默认值："),_("code",[e._v("{}")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.rowCollectionOnDone")]),e._v(" - 布尔值，当为true时将在Requests的"),_("code",[e._v("done *")]),e._v("事件中公开接收到的行。\n查看 done, "),_("a",{attrs:{href:"http://tediousjs.github.io/tedious/api-request.html#event_doneInProc",target:"_blank",rel:"noopener noreferrer"}},[e._v("doneInProc"),_("OutboundLink")],1),e._v("\n和 "),_("a",{attrs:{href:"http://tediousjs.github.io/tedious/api-request.html#event_doneProc",target:"_blank",rel:"noopener noreferrer"}},[e._v("doneProc"),_("OutboundLink")],1),e._v(". (默认: "),_("code",[e._v("false")]),e._v(")")]),e._v(" "),_("p",[e._v("注意：如果收到很多行，启用此选项可能会导致内存使用过多。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.rowCollectionOnRequestCompletion")]),e._v(" - 布尔值，当为true时将在请求的完成回调中公开接收的行。 查看 "),_("a",{attrs:{href:"http://tediousjs.github.io/tedious/api-request.html#function_newRequest",target:"_blank",rel:"noopener noreferrer"}},[e._v("new Request"),_("OutboundLink")],1),e._v(". (默认: "),_("code",[e._v("false")]),e._v(")")]),e._v(" "),_("p",[e._v("注意：如果收到很多行，启用此选项可能会导致内存使用过多。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.tdsVersion")]),e._v(" - 要使用的TDS版本。 如果服务器不支持指定的版本，则使用协商的版本。 这些版本可以从"),_("code",[e._v("require('tedious').TDS_VERSION")]),e._v("获得。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("7_1")])]),e._v(" "),_("li",[_("code",[e._v("7_2")])]),e._v(" "),_("li",[_("code",[e._v("7_3_A")])]),e._v(" "),_("li",[_("code",[e._v("7_3_B")])]),e._v(" "),_("li",[_("code",[e._v("7_4")])])]),e._v(" "),_("p",[e._v("(默认: "),_("code",[e._v("7_4")]),e._v(")")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.debug.packet")]),e._v(" - 布尔值，控制是否将使用描述数据包详细信息的文本发出"),_("code",[e._v("debug")]),e._v("事件（默认值："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.debug.data")]),e._v(" - 布尔值，控制是否将发出"),_("code",[e._v("debug")]),e._v("事件，文本描述包数据细节（默认值："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.debug.payload")]),e._v(" - 布尔值，控制是否使用描述数据包有效负载详细信息的文本发出"),_("code",[e._v("debug")]),e._v("事件（默认值："),_("code",[e._v("false")]),e._v("）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("options.debug.token")]),e._v(" - 布尔值，控制是否将使用描述令牌流令牌的文本发出"),_("code",[e._v("debug")]),e._v("事件（默认值："),_("code",[e._v("false")]),e._v("）。")])])]),e._v(" "),_("blockquote",[_("p",[e._v("注： 由于译者对mssql理解不够深入，故一些翻译直接使用了机翻，因此会有些词不达意，如有更好的翻译选项，请提交PR进行完善。")])]),e._v(" "),_("h2",{attrs:{id:"mongodb"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[e._v("#")]),e._v(" "),_("code",[e._v("mongodb")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("url")]),e._v(" - 连接 URL")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("host")]),e._v(" - 数据库主机")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("port")]),e._v(" - 端口号，mongodb 默认端口是"),_("code",[e._v("27017")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("database")]),e._v(" - 数据库名")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("poolSize")]),e._v(" - 设置每个服务器或代理连接的最大池大小")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ssl")]),e._v(" - 使用 ssl 连接（需要有支持 ssl 的 mongod 服务器）。默认值："),_("code",[e._v("false")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sslValidate")]),e._v(" - 针对 ca 验证 mongod 服务器证书（需要具有 ssl 支持的，2.4 或更高版本的 mongod 服务器）。默认值："),_("code",[e._v("true")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sslCA")]),e._v(" - 有效证书的数组，可以是 Buffers 或 Strings（需要具有支持 ssl 的，2.4 或更高版本的 mongod 服务器）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sslCert")]),e._v(" - 包含我们希望提供的证书的字符串或缓冲区（需要具有支持 ssl 的，2.4 或更高版本的 mongod 服务器）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sslKey")]),e._v(" - String or buffer containing the certificate private key we wish to present (需要具有支持 ssl 的，2.4 或更高版本的 mongod 服务器)。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sslPass")]),e._v(" - 包含我们希望提供的证书私钥的字符串或缓冲区 (needs to have a mongod server with ssl support,\n2.4 or higher).")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("autoReconnect")]),e._v(" - 出错时重新连接。 默认: "),_("code",[e._v("true")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("noDelay")]),e._v(" - TCP Socket NoDelay 选项. 默认: "),_("code",[e._v("true")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("keepAlive")]),e._v(" - 在 TCP socket 上启动 keepAlive 之前等待的毫秒数。默认: "),_("code",[e._v("30000")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("connectTimeoutMS")]),e._v(" - TCP 连接超时。 默认: "),_("code",[e._v("30000")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("socketTimeoutMS")]),e._v(" - TCP Socket 连接超时。 默认: "),_("code",[e._v("360000")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("reconnectTries")]),e._v(" - 服务器尝试重新连接 #次数. 默认: "),_("code",[e._v("30")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("reconnectInterval")]),e._v(" - 服务器将在重试之间等待 #毫秒 默认: "),_("code",[e._v("1000")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ha")]),e._v(" - 打开高可用性监控。默认: "),_("code",[e._v("true")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("haInterval")]),e._v(" - 每次复制状态检查之间的时间。 默认: "),_("code",[e._v("10000,5000")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("replicaSet")]),e._v(" - 要连接的 replicaset 的名称。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("acceptableLatencyMS")]),e._v(" - 设置使用 NEAREST 时要选择的服务器范围（最低 ping ms +延迟时间范围，例如：范围为 1 到（1 + 15）ms）。默认值：15。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("secondaryAcceptableLatencyMS")]),e._v(" - 设置使用 NEAREST 时要选择的服务器范围（最低 ping ms +延迟时间范围，例如：范围为 1 到（1 + 15）ms）。默认值：15。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("connectWithNoPrimary")]),e._v(" - 设置驱动程序是否应该连接，即使没有主数据库依然可用。默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("authSource")]),e._v(" - 数据库身份验证是否依赖于另一个 databaseName。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("w")]),e._v(" - The write concern.")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("wtimeout")]),e._v(" - The write concern 超时")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("j")]),e._v(" - Specify a journal write concern. 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("forceServerObjectId")]),e._v(" - 强制服务器分配_id值而不是驱动程序。 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("serializeFunctions")]),e._v(" - 序列化任何对象上的函数。 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ignoreUndefined")]),e._v(" - 指定BSON序列化程序是否应忽略未定义的字段。 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("raw")]),e._v(" - 将文档结果作为原始BSON缓冲区返回。 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("promoteLongs")]),e._v(" - 如果Long值适合53位分辨率，则将其提升为数字。默认: "),_("code",[e._v("true")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("promoteBuffers")]),e._v(" - 将二进制BSON值提升为native Node Buffers。默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("promoteValues")]),e._v(" - 在可能的情况下将BSON值提升为native类型，设置为false以仅接收wrapper类型。默认: "),_("code",[e._v("true")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("domainsEnabled")]),e._v(" - 启用当前域中回调的包装，默认情况下禁用以避免执行命中。 默认: "),_("code",[e._v("false")]),e._v(".")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("bufferMaxEntries")]),e._v(" - 设置一个限制，在放弃获得有效连接之前，驱动程序将缓冲多少个操作，默认为-1标识无限制。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("readPreference")]),e._v(" - 首选read偏好:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("ReadPreference.PRIMARY")])]),e._v(" "),_("li",[_("code",[e._v("ReadPreference.PRIMARY_PREFERRED")])]),e._v(" "),_("li",[_("code",[e._v("ReadPreference.SECONDARY")])]),e._v(" "),_("li",[_("code",[e._v("ReadPreference.SECONDARY_PREFERRED")])]),e._v(" "),_("li",[_("code",[e._v("ReadPreference.NEAREST")])])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("pkFactory")]),e._v(" - 用于生成自定义_id键的主键工厂对象。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("promiseLibrary")]),e._v(" - 应用程序希望使用的Promise库类如Bluebird，必须与ES6兼容。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("readConcern")]),e._v(" - 指定集合的​​读取问题。 （仅支持MongoDB 3.2或更高版本）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("maxStalenessSeconds")]),e._v(" - 为辅助读取指定maxStalenessSeconds值，最小值为90秒。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("appname")]),e._v(" - 创建此MongoClient实例的应用程序的名称。 MongoDB 3.4及更新版将在建立每个连接时在服务器日志中打印此值。它还记录在慢查询日志和概要文件集合中。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("loggerLevel")]),e._v(" - 指定驱动程序记录器使用的日志级别 ("),_("code",[e._v("error/warn/info/debug")]),e._v(")。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("logger")]),e._v(" - 指定客户记录器机制，可用于使用你的应用程序级别记录器进行记录。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("authMechanism")]),e._v(" - 设置MongoDB用于验证连接的身份验证机制。")])])]),e._v(" "),_("blockquote",[_("p",[e._v("注： 由于译者对MongoDB理解不够深入，故一些翻译直接使用了机翻，因此会有些词不达意，如有更好的翻译选项，请提交PR进行完善。")])]),e._v(" "),_("h2",{attrs:{id:"sql-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sql-js"}},[e._v("#")]),e._v(" "),_("code",[e._v("sql.js")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("database")]),e._v(": 应导入的原始 UInt8Array 数据库。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("sqlJsConfig")]),e._v(": sql.js可选启动配置")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("autoSave")]),e._v(": 是否应禁用 autoSave。如果设置为 true，则在发生更改并指定"),_("code",[e._v("location")]),e._v("时，数据库将保存到给定的文件位置（Node.js）或 LocalStorage（浏览器）。否则可以使用"),_("code",[e._v("autoSaveCallback")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("autoSaveCallback")]),e._v(": 在对数据库进行更改并启用"),_("code",[e._v("autoSave")]),e._v("时调用的函数。该函数获取表示数据库的"),_("code",[e._v("UInt8Array")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("location")]),e._v(": 要加载和保存数据库的文件位置。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("useLocalForage")]),e._v(": 允许使用localforage库(https://github.com/localForage/localForage)从indexedDB异步保存和加载数据库，而不是在浏览器环境中使用synchron本地存储方法。 需要将localforage模块添加到项目中，并且应在页面中导入localforage.js。")])])]),e._v(" "),_("h2",{attrs:{id:"expo"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#expo"}},[e._v("#")]),e._v(" "),_("code",[e._v("expo")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("database")]),e._v(' - 数据库名， 例如 "mydb".')]),e._v(" "),_("li",[_("code",[e._v("driver")]),e._v(" - Expo SQLite 模块. 例如，"),_("code",[e._v("require('expo-sqlite')")]),e._v(".")])]),e._v(" "),_("h2",{attrs:{id:"连接选项示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接选项示例"}},[e._v("#")]),e._v(" 连接选项示例")]),e._v(" "),_("p",[e._v("以下是 mysql 连接选项的一个小例子：")]),e._v(" "),_("div",{staticClass:"language-typescript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-typescript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    host"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"localhost"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    port"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("3306")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    username"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"test"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    password"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"test"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    database"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"test"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    logging"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    synchronize"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    entities"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"entity/*.js"')]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    subscribers"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"subscriber/*.js"')]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    entitySchemas"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"schema/*.json"')]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    migrations"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"migration/*.js"')]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    cli"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        entitiesDir"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"entity"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        migrationsDir"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"migration"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        subscribersDir"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"subscriber"')]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])])}),[],!1,null,null,null);v.default=o.exports}}]);