(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{293:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" git常用命令")]),t._v(" "),e("h2",{attrs:{id:"创建版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git clone <url>        #克隆远程版本库\n$ git init               #初始化本地版本库\n")])])]),e("h2",{attrs:{id:"修改和提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改和提交"}},[t._v("#")]),t._v(" 修改和提交")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git status             #查看状态\n$ git diff               #查看变更内容\n$ git add .              #跟踪所有修改过的文件\n$ git add <file>         #跟踪指定文件\n$ git mv <old> <new>     #文件改名\n$ git rm <file>          #删除文件\n$ git rm --cached <file>                #停止跟踪文件但不删除\n$ git commit -m "提交备注信息"          #提交所有修改过的文件\n$ git commit --amend                    #修改最后一次提交\n')])])]),e("h2",{attrs:{id:"查看提交历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史"}},[t._v("#")]),t._v(" 查看提交历史")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git log                               #查看提交历史\n$ git log -p  <file>                    #查看指定文件提交历史\n$ git bname <file>                      #以列表方式查看指定文件提交历史\n")])])]),e("h2",{attrs:{id:"撤销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git reset --hard HEAD                 #撤销工作目录中所有未提交文件的修改内容\n$ git checkout HEAD <file>              #撤销指定的未提交文件的修改内容\n$ git revert <commit>                   #撤销指定的提交\n")])])]),e("h2",{attrs:{id:"分支与标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支与标签"}},[t._v("#")]),t._v(" 分支与标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git branch                            #显示所有分支\n$ git checkout <branch/tag>             #切换到指定分支或标签\n$ git branch <newbranch>                #创建新分支\n$ git branch -d <branch>                #删除本地分支\n$ git tag                               #列出本地所有标签\n$ git tag <tagname>                     #基于最新提交创建标签\n$ git tag -d <tagname>                  #删除标签\n")])])]),e("h2",{attrs:{id:"合并与衍合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并与衍合"}},[t._v("#")]),t._v(" 合并与衍合")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git merge <branch>                    #合并指定分支到当前分支\n$ git rebase  <branch>                  #衍合指定分支到当前分支\n")])])]),e("h2",{attrs:{id:"远程操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程操作"}},[t._v("#")]),t._v(" 远程操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git remote  -v                        #查看远程版本库信息\n$ git remote show <remote>              #查看指定远程版本库信息\n$ git remote add <remote> <url>         #添加远程版本库\n$ git fetch <remote>                    #从远程版本库获取代码\n$ git pull <remote> <branch>            #下载代码及快速合并\n$ git push <remote> <branch>            #上传代码及快速合并\n$ git push <remote> :<branch/tag-name>  #删除远程分支及标签\n$ git push --tags                       #上传所有标签\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);